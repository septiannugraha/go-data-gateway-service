[pytest]
# Pytest configuration for workflow testing

# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    unit: Unit tests that test individual components
    integration: Integration tests that test component interactions
    e2e: End-to-end tests that test complete user workflows
    slow: Tests that take more than 5 seconds
    smoke: Quick smoke tests for basic functionality
    security: Security-focused tests
    performance: Performance and load tests
    requires_docker: Tests that require Docker containers

# Output options
addopts =
    -v
    --strict-markers
    --tb=short
    --color=yes
    --failed-first
    --maxfail=5

# Coverage options
cov = services
cov-report = html:test-results/coverage
cov-report = term-missing:skip-covered
cov-fail-under = 70

# Timeout
timeout = 60
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Async
asyncio_mode = auto

# Parallel execution
workers = auto