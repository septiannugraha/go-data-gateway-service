openapi: 3.0.3
info:
  title: Go Data Gateway API
  description: |
    A high-performance data gateway service that provides unified access to multiple data sources
    including Dremio (Apache Iceberg), BigQuery, and other data warehouses.

    This API is designed for production use with comprehensive caching, streaming support,
    and batch processing capabilities.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api.example.com
    description: Production server

security:
  - ApiKeyAuth: []
  - BearerAuth: []

paths:
  # Infrastructure Endpoints
  /health:
    get:
      summary: Health Check
      description: Returns the health status of the service
      tags:
        - Infrastructure
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: "healthy"
                timestamp: "2025-01-24T10:00:00Z"
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ready:
    get:
      summary: Readiness Check
      description: Checks if all data sources are ready to accept requests
      tags:
        - Infrastructure
      security: []
      responses:
        '200':
          description: All services are ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadyResponse'
        '503':
          description: One or more services are not ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /metrics:
    get:
      summary: Prometheus Metrics
      description: Returns Prometheus-formatted metrics for monitoring
      tags:
        - Infrastructure
      security: []
      responses:
        '200':
          description: Metrics in Prometheus format
          content:
            text/plain:
              schema:
                type: string
                example: |
                  # HELP go_gc_duration_seconds A summary of the GC invocation durations.
                  # TYPE go_gc_duration_seconds summary
                  go_gc_duration_seconds{quantile="0"} 0

  /cache/stats:
    get:
      summary: Cache Statistics
      description: Returns cache statistics including hit rates and memory usage
      tags:
        - Infrastructure
      responses:
        '200':
          description: Cache statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheStats'

  # Query Endpoints
  /api/v1/query:
    post:
      summary: Execute Query
      description: Execute a single SQL query against the specified data source
      tags:
        - Query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
            examples:
              dremio:
                value:
                  sql: "SELECT * FROM nessie_iceberg.tender_data LIMIT 10"
                  source: "DATAWAREHOUSE"
              bigquery:
                value:
                  sql: "SELECT * FROM dataset.table LIMIT 10"
                  source: "BIGQUERY"
      responses:
        '200':
          description: Query executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v1/batch:
    post:
      summary: Execute Batch Queries
      description: Execute multiple queries in a single request with optional parallel execution
      tags:
        - Query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
      responses:
        '200':
          description: Batch executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/batch/stream:
    post:
      summary: Stream Batch Results
      description: Execute batch queries and stream results as they complete
      tags:
        - Query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
      responses:
        '200':
          description: Streaming response
          content:
            application/x-ndjson:
              schema:
                type: string
                format: ndjson
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/stream:
    post:
      summary: Stream Query Results
      description: Execute a query and stream results in chunks
      tags:
        - Query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamRequest'
      responses:
        '200':
          description: Streaming response
          content:
            application/x-ndjson:
              schema:
                type: string
                format: ndjson
            application/json:
              schema:
                type: array
                items:
                  type: object
            text/csv:
              schema:
                type: string
                format: csv
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/stream/sse:
    post:
      summary: Server-Sent Events Stream
      description: Stream query results using Server-Sent Events for real-time data
      tags:
        - Query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamRequest'
      responses:
        '200':
          description: SSE streaming response
          content:
            text/event-stream:
              schema:
                type: string
                format: sse
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Tender Endpoints
  /api/v1/tender:
    get:
      summary: List Tenders
      description: Retrieve a paginated list of tenders from Dremio/Iceberg
      tags:
        - Tender
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - name: status
          in: query
          description: Filter by tender status
          schema:
            type: string
            enum: [active, completed, cancelled]
        - name: sort_by
          in: query
          description: Field to sort by
          schema:
            type: string
            default: tanggal_buat_paket
        - name: order
          in: query
          description: Sort order
          schema:
            type: string
            enum: [ASC, DESC]
            default: DESC
      responses:
        '200':
          description: List of tenders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenderListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v1/tender/{id}:
    get:
      summary: Get Tender by ID
      description: Retrieve a specific tender by its ID
      tags:
        - Tender
      parameters:
        - name: id
          in: path
          required: true
          description: Tender ID
          schema:
            type: string
      responses:
        '200':
          description: Tender details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tender'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v1/tender/search:
    post:
      summary: Search Tenders
      description: Search tenders with advanced filtering options
      tags:
        - Tender
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenderSearchRequest'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenderListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  # RUP Endpoints
  /api/v1/rup:
    get:
      summary: List RUP Data
      description: Retrieve RUP (Rencana Umum Pengadaan) data from BigQuery
      tags:
        - RUP
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of RUP data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RUPListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v1/rup/{id}:
    get:
      summary: Get RUP by ID
      description: Retrieve specific RUP data by ID
      tags:
        - RUP
      parameters:
        - name: id
          in: path
          required: true
          description: RUP ID
          schema:
            type: string
      responses:
        '200':
          description: RUP details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RUP'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v1/rup/search:
    post:
      summary: Search RUP Data
      description: Search RUP data with advanced filtering
      tags:
        - RUP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RUPSearchRequest'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RUPListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  # BigQuery Endpoints
  /api/v1/bigquery/estimate-cost:
    post:
      summary: Estimate Query Cost
      description: Estimate the cost of running a BigQuery query
      tags:
        - BigQuery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostEstimateRequest'
      responses:
        '200':
          description: Cost estimate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostEstimateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication

  parameters:
    limit:
      name: limit
      in: query
      description: Maximum number of items to return
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 100
    offset:
      name: offset
      in: query
      description: Number of items to skip
      schema:
        type: integer
        minimum: 0
        default: 0

  schemas:
    # Infrastructure Schemas
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        uptime:
          type: integer
          description: Uptime in seconds

    ReadyResponse:
      type: object
      properties:
        ready:
          type: boolean
        services:
          type: object
          additionalProperties:
            type: object
            properties:
              ready:
                type: boolean
              message:
                type: string

    CacheStats:
      type: object
      properties:
        hit_rate:
          type: number
          format: float
          minimum: 0
          maximum: 1
        total_hits:
          type: integer
        total_misses:
          type: integer
        memory_used_mb:
          type: number
        entries_count:
          type: integer
        datasource_metrics:
          type: object
          additionalProperties:
            type: object
            properties:
              queries_executed:
                type: integer
              cache_hits:
                type: integer
              average_query_time_ms:
                type: number

    # Query Schemas
    QueryRequest:
      type: object
      required:
        - sql
        - source
      properties:
        sql:
          type: string
          description: SQL query to execute
          minLength: 1
          maxLength: 100000
        source:
          type: string
          enum: [DATAWAREHOUSE, BIGQUERY]
          description: Data source to query

    QueryResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            type: object
            additionalProperties: true
        meta:
          $ref: '#/components/schemas/Meta'
        cached:
          type: boolean
        query_time_ms:
          type: integer

    BatchRequest:
      type: object
      required:
        - queries
      properties:
        queries:
          type: array
          minItems: 1
          maxItems: 100
          items:
            type: object
            required:
              - id
              - query
              - data_source
            properties:
              id:
                type: string
                description: Unique identifier for this query
              query:
                type: string
                description: SQL query to execute
              data_source:
                type: string
                enum: [DATAWAREHOUSE, BIGQUERY]
              table:
                type: string
                description: Optional table name for optimization
              options:
                type: object
                properties:
                  timeout:
                    type: integer
                    description: Timeout in seconds
                  cache_ttl:
                    type: integer
                    description: Cache TTL in seconds
        options:
          type: object
          properties:
            max_concurrency:
              type: integer
              minimum: 1
              maximum: 10
              default: 5
            timeout:
              type: integer
              description: Overall timeout in seconds
            stop_on_error:
              type: boolean
              default: false

    BatchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              status:
                type: string
                enum: [success, error, skipped]
              data:
                type: array
                items:
                  type: object
              error:
                type: string
              query_time_ms:
                type: integer
              row_count:
                type: integer
              cache_hit:
                type: boolean
        summary:
          type: object
          properties:
            total_queries:
              type: integer
            successful_queries:
              type: integer
            failed_queries:
              type: integer
            skipped_queries:
              type: integer
            total_time_ms:
              type: integer
            cache_hits:
              type: integer
        timestamp:
          type: string
          format: date-time

    StreamRequest:
      type: object
      required:
        - data_source
      properties:
        query:
          type: string
          description: SQL query to execute
        data_source:
          type: string
          enum: [DATAWAREHOUSE, BIGQUERY]
        table:
          type: string
          description: Optional table name
        chunk_size:
          type: integer
          minimum: 100
          maximum: 10000
          default: 1000
        format:
          type: string
          enum: [json, ndjson, csv]
          default: ndjson
        options:
          type: object
          properties:
            timeout:
              type: integer
            cache_ttl:
              type: integer

    # Tender Schemas
    Tender:
      type: object
      properties:
        tender_id:
          type: string
        nama_paket:
          type: string
        nilai_pagu:
          type: number
        metode_pengadaan:
          type: string
        tahun_anggaran:
          type: integer
        status_tender:
          type: string
        tanggal_buat_paket:
          type: string
          format: date
        tanggal_pengumuman:
          type: string
          format: date
        provinsi:
          type: string
        jenis_pengadaan:
          type: string
        nama_kl:
          type: string
        nilai_kontrak:
          type: number
        satuan_kerja:
          type: string

    TenderListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/Tender'
        meta:
          $ref: '#/components/schemas/Meta'

    TenderSearchRequest:
      type: object
      properties:
        keyword:
          type: string
          description: Search keyword
        status:
          type: string
          enum: [active, completed, cancelled]
        tahun_anggaran:
          type: integer
        provinsi:
          type: string
        nilai_pagu_min:
          type: number
        nilai_pagu_max:
          type: number
        limit:
          type: integer
          minimum: 1
          maximum: 1000
          default: 100
        offset:
          type: integer
          minimum: 0
          default: 0

    # RUP Schemas
    RUP:
      type: object
      properties:
        kd_kro:
          type: integer
        kd_kro_str:
          type: string
        nama_kro:
          type: string
        pagu_kro:
          type: number
        tahun_anggaran:
          type: integer
        kd_satker:
          type: integer
        kd_klpd:
          type: string
        nama_klpd:
          type: string
        jenis_klpd:
          type: string
        kd_program:
          type: integer
        kd_kegiatan:
          type: integer
        _event_date:
          type: string
          format: date-time
        is_deleted:
          type: boolean

    RUPListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/RUP'
        meta:
          $ref: '#/components/schemas/Meta'

    RUPSearchRequest:
      type: object
      properties:
        keyword:
          type: string
        tahun_anggaran:
          type: integer
        kd_klpd:
          type: string
        nama_klpd:
          type: string
        pagu_min:
          type: number
        pagu_max:
          type: number
        limit:
          type: integer
          minimum: 1
          maximum: 1000
          default: 100
        offset:
          type: integer
          minimum: 0
          default: 0

    # BigQuery Schemas
    CostEstimateRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          description: SQL query to estimate cost for

    CostEstimateResponse:
      type: object
      properties:
        bytes_processed:
          type: integer
          format: int64
        bytes_billed:
          type: integer
          format: int64
        estimated_cost_usd:
          type: number
          format: float
        cache_hit:
          type: boolean
        message:
          type: string

    # Common Schemas
    Meta:
      type: object
      properties:
        page:
          type: integer
        per_page:
          type: integer
        total:
          type: integer
        total_pages:
          type: integer

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error:
          type: string
        details:
          type: string
        timestamp:
          type: string
          format: date-time
        request_id:
          type: string

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error: "Invalid request"
            details: "The SQL query is malformed"
            timestamp: "2025-01-24T10:00:00Z"
            request_id: "req-123456"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error: "Unauthorized"
            details: "Invalid or missing API key"
            timestamp: "2025-01-24T10:00:00Z"
            request_id: "req-123456"

    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error: "Not found"
            details: "The requested resource was not found"
            timestamp: "2025-01-24T10:00:00Z"
            request_id: "req-123456"

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error: "Internal server error"
            details: "An unexpected error occurred"
            timestamp: "2025-01-24T10:00:00Z"
            request_id: "req-123456"

    ServiceUnavailable:
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error: "Service unavailable"
            details: "The data source is temporarily unavailable"
            timestamp: "2025-01-24T10:00:00Z"
            request_id: "req-123456"

tags:
  - name: Infrastructure
    description: Health checks and monitoring endpoints
  - name: Query
    description: Query execution and data retrieval endpoints
  - name: Tender
    description: Tender data management endpoints
  - name: RUP
    description: RUP (Rencana Umum Pengadaan) data endpoints
  - name: BigQuery
    description: BigQuery-specific operations