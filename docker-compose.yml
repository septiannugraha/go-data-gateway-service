version: '3.8'

services:
  # Fusio API Gateway (public facing)
  fusio-db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: fusio
      MYSQL_USER: fusio
      MYSQL_PASSWORD: fusio123
    volumes:
      - fusio_db_data:/var/lib/mysql
    networks:
      - api-network

  fusio:
    image: fusio/fusio:latest
    ports:
      - "80:80"
      - "443:443"
    environment:
      FUSIO_PROJECT_KEY: "42eec18ffdbffc9fda6110dcc705d6ce"
      FUSIO_URL: "http://localhost"
      FUSIO_DB_NAME: "mysql://fusio:fusio123@fusio-db/fusio"
      FUSIO_ENV: "prod"
      # Configure backend to forward to our Go service
      FUSIO_BACKEND_URL: "http://go-gateway:8080"
    depends_on:
      - fusio-db
    networks:
      - api-network

  # Go Data Gateway Service
  go-gateway:
    build: .
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      ENV: production

      # API Keys for authentication between Fusio and Go service
      API_KEYS: "demo-key-123,fusio-gateway-key,test-key-456"

      # Rate limiting
      RATE_LIMIT: 100

      # Dremio configuration
      DREMIO_HOST: ${DREMIO_HOST:-dremio}
      DREMIO_PORT: ${DREMIO_PORT:-31010}
      DREMIO_USERNAME: ${DREMIO_USERNAME}
      DREMIO_PASSWORD: ${DREMIO_PASSWORD}

      # BigQuery configuration
      BIGQUERY_PROJECT_ID: ${BIGQUERY_PROJECT_ID}
      BIGQUERY_DATASET_ID: ${BIGQUERY_DATASET_ID}
      GOOGLE_APPLICATION_CREDENTIALS: /app/credentials/bigquery-key.json

      # Redis for caching
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      # Mount BigQuery credentials
      - ./credentials/bigquery-key.json:/app/credentials/bigquery-key.json:ro
    depends_on:
      - redis
    networks:
      - api-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - api-network

  # Optional: Dremio for local testing
  # Uncomment if you want to run Dremio locally
  # dremio:
  #   image: dremio/dremio-oss:latest
  #   ports:
  #     - "9047:9047"    # Web UI
  #     - "31010:31010"  # ODBC/JDBC
  #     - "32010:32010"  # Arrow Flight
  #   volumes:
  #     - dremio_data:/opt/dremio/data
  #   networks:
  #     - api-network

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - api-network

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - api-network

networks:
  api-network:
    driver: bridge

volumes:
  fusio_db_data:
  redis_data:
  dremio_data:
  prometheus_data:
  grafana_data: